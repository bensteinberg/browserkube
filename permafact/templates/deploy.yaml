---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: cleanup
  namespace: default
spec:
  schedule: "*/30 * * * *"
  successfulJobsHistoryLimit: 0
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        metadata:
          annotations:
            checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}

        spec:
          restartPolicy: Never
          containers:
          - name: cleanup
            image: ikreymer/permaproof-main:{{ .Values.version | default "latest" }}
            imagePullPolicy: Always
            command: ["python", "cleanup.py"]
            envFrom:
              - secretRef:
                  name: storage-auth

              - configMapRef:
                  name: {{ .Values.name }}-config

            resources:
              limits:
                cpu: 100m

              requests:
                cpu: 25m

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: perma-fact-{{ .Values.name }}

spec:
  selector:
    matchLabels:
      app: perma-fact-{{ .Values.name }}
  replicas: {{ .Values.num_backend_replicas | default 2 }}
  template:
    metadata:
      labels:
        app: perma-fact-{{ .Values.name }}

      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}

    spec:     
      volumes:
        - name: nginx-conf
          configMap:
            name: nginx-conf
            items:
              - key: nginx.conf
                path: nginx.conf

        - name: nginx-resolver
          emptyDir: {}

      initContainers:
        - name: nginx-init
          image: nginx
          command: ["/bin/sh"]
          args: ["-c", "echo resolver $(awk 'BEGIN{ORS=\" \"} $1==\"nameserver\" {print $2}' /etc/resolv.conf) \";\" > /etc/nginx/resolvers/resolvers.conf"]
          volumeMounts:
            - name: nginx-resolver
              mountPath: /etc/nginx/resolvers/

      containers:
        - name: nginx
          image: nginx
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: nginx-conf
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
              readOnly: true

            - name: nginx-resolver
              mountPath: /etc/nginx/resolvers/
              readOnly: true

          resources:
            limits:
              cpu: 100m

            requests:
              cpu: 25m

        - name: main
          image: ikreymer/permaproof-main:{{ .Values.version | default "latest" }}
          imagePullPolicy: Always
          envFrom:
            - configMapRef:
                name: {{ .Values.name }}-config

            - secretRef:
                name: storage-auth

          resources:
            limits:
              cpu: 100m

            requests:
              cpu: 25m


---

apiVersion: v1
kind: Service

metadata:
  name: perma-fact-{{ .Values.name }}
  labels:
    app: perma-fact-{{ .Values.name }}

{{- if .Values.service }}
  {{- if .Values.service.annotations }}
  annotations:
  {{- range $key, $val := .Values.service.annotations }}
    {{ $key }}: {{ $val | quote }}
  {{- end }}
  {{- end }}
{{- end }}

spec:
  selector:
    app: perma-fact-{{ .Values.name }}

{{- if .Values.service }}
  {{- if .Values.service.type }}
  type: {{ .Values.service.type | quote }}
  {{- end }}
{{- end }}

  ports:
    - protocol: TCP
      port: 80
      name: main


